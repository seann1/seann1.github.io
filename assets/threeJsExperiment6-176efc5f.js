import"./modulepreload-polyfill-3cfb730f.js";import{n as x,G as ot}from"./lil-gui.esm-21e57683.js";import{S as st,P as it,W as nt,l as rt,D as at,f as ht,C as Z,F as ct,m as mt,a as I,g as d,d as lt,n as pt,b as dt}from"./three.module-4506f20e.js";import{O as ut}from"./OrbitControls-c2e9ad5d.js";function gt(n){const o=new st,e=new it(75,window.innerWidth/window.innerHeight,.1,1e3),t=new nt({canvas:document.getElementById(n)});return t.shadowMap.enabled=!0,t.shadowMap.type=rt,t.setSize(window.innerWidth,window.innerHeight),window.addEventListener("resize",()=>{e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix(),t.setSize(window.innerWidth,window.innerHeight)}),{scene:o,camera:e,renderer:t}}function wt(n){const o=new at(16777215,1);o.position.set(0,100,100).normalize(),o.castShadow=!0,n.add(o)}class yt{constructor(o,e,t){this.noise=new x.Noise(Math.random()),this.geometry=new ht(o,e,t,t);const r=[];for(let s=0;s<this.geometry.attributes.position.count;s++){const a=this.geometry.attributes.position.getZ(s),i=new Z,h=d.mapLinear(a,-10,10,.9,.1);i.setHSL(h,1,.5),r.push(i.r,i.g,i.b)}this.geometry.setAttribute("color",new ct(r,3)),this.material=new mt({vertexColors:!0,flatShading:!0}),this.mesh=new I(this.geometry,this.material),this.mesh.rotation.x=-Math.PI/2}updateColors(){const o=this.geometry.attributes.color;for(let e=0;e<this.geometry.attributes.position.count;e++){const t=this.geometry.attributes.position.getZ(e),r=d.mapLinear(t,-10,10,.9,.1),s=new Z;Math.abs(Math.sin(this.geometry.attributes.position.getY(e)*.05))*.6,s.setHSL(r,1,.5),o.setXYZ(e,s.r,s.g,s.b)}o.needsUpdate=!0}updateVertices(o,e,t,r){const s=Math.sin(o*9e-4);for(let a=0;a<this.geometry.attributes.position.count;a++){const i=this.geometry.attributes.position.getX(a)*(s*.1),h=this.geometry.attributes.position.getY(a)/30,m=e.perlin2(i,h+r)*20;t.perlin2(i,h+r),this.geometry.attributes.position.setZ(a,m)}this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeVertexNormals()}}class ft{constructor(o,e){this.radius=o,this.geometry=new lt(o,e,e),this.originalSpherePositions=[];for(let t=0;t<this.geometry.attributes.position.count;t++)this.originalSpherePositions.push(this.geometry.attributes.position.getX(t),this.geometry.attributes.position.getY(t),this.geometry.attributes.position.getZ(t));this.material=new pt({color:8970495,roughness:.2,metalness:.5,transmission:.8,thickness:2,transparent:!0,opacity:.9,ior:1.3,clearcoat:1,clearcoatRoughness:.1}),this.mesh=new I(this.geometry,this.material),this.mesh.position.set(0,30,0)}updateSphereVertices(o,e,t,r){const a=t.geometry.attributes.position,i=t.geometry.parameters.width,h=t.geometry.parameters.height,m=t.geometry.parameters.widthSegments,M=t.geometry.parameters.heightSegments,R=i/m,T=h/M,j=i/2,k=h/2;for(let c=0;c<this.geometry.attributes.position.count;c++){let K=function(Y,_,$=[1,0,1,0,1,0,1]){const tt=(Y+1)/2,et=Math.floor(tt/_);return $[et%5]};const z=this.originalSpherePositions[c*3],C=this.originalSpherePositions[c*3+1],H=this.originalSpherePositions[c*3+2],B=z/this.radius,O=C/this.radius,q=H/this.radius,J=e.perlin3(B*2,O*2,q*2+o*5*.5),y=2+K(J,r)*50;let L=z*(1+y/this.radius*.2),f=C*(1+y/this.radius*.2),W=H*(1+y/this.radius*.2);const p=this.mesh.localToWorld(new dt(L,f,W)),v=t.worldToLocal(p.clone());let b=Math.round((v.x+j)/R),S=Math.round((v.z+k)/T);b=d.clamp(b,0,m),S=d.clamp(S,0,M);const Q=S*(m+1)+b,V=a.getY(Q);p.y<V+10&&(p.y=V+10,f=this.mesh.worldToLocal(p).y+5),this.geometry.attributes.position.setXYZ(c,L,f,W)}this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeVertexNormals()}}const N=new ot,U={sphereHeight:0,stepInterval:.15},A=new x.Noise(Math.random()),bt=new x.Noise(Math.random()),{scene:u,camera:g,renderer:X}=gt("threeCan");let P=0,E=.15;const F=new ut(g,X.domElement);F.enableDamping=!0;const l=new yt(400,200,200);l.mesh.receiveShadow=!0;u.add(l.mesh);const w=new ft(30,64);w.mesh.castShadow=!0;u.add(w.mesh);N.add(U,"sphereHeight",-30,100).onChange(n=>{w.mesh.position.y=n});N.add(U,"stepInterval",.1,.3).onChange(n=>{E=n});wt(u);g.position.set(0,60,100);g.lookAt(0,0,0);let G=0;function D(){requestAnimationFrame(D),l.updateVertices(G,A,bt,P),l.updateColors(),w.updateSphereVertices(P,A,l.mesh,E),F.update(),X.render(u,g),P+=.01,G++}D();
